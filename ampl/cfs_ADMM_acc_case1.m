clc;
clear;

vehicle_l_val = 0.25;
Nstep_val = 50;  %100个点可以  60个点 3.63
margin_val = 0.25;

sigma_val = 10; %10可以 
lambda_val = ones(5*Nstep_val+1,1);

x_ini_val = 0;
y_ini_val = 0;
theta_ini_val = 0;
v_ini_val = 0;
phi_ini_val = 0;

x_fi_val = 9;
y_fi_val = 0;
thetaend_val = 0;

nobj = 5;
obs = {};
obs{1}.v = [0;0]; % velocity of the obstacle
obs{1}.poly = [2 4.3 4 3;3 3 -0 -0]; % shape of the obstacle
obs{2}.v = [0;0];
obs{2}.poly = [6 7 7.5 6;0 1 -3 -3];
obs{3}.v = [0;0];
obs{3}.poly = [1 2 1.5 0;-2 -3 -0.5 -1];
obs{5}.v = [0;0];
obs{5}.poly = [1 6 1 5; 1 1 2 2];
obs{4}.v = [0;0];
obs{4}.poly = [3 7 7 3;-3 -3 -2.1 -2.1];

%% 计算z的初始值  第一次迭代
start = [x_ini_val];
ending = [x_fi_val];
xz_val = [];
for i = 1:Nstep_val
    xz_val(:,i) = (Nstep_val-i)/(Nstep_val-1)*start+(i-1)/(Nstep_val-1)*ending;
end

start = [y_ini_val];
ending = [y_fi_val];
yz_val = [];
for i = 1:Nstep_val
    yz_val(:,i) = (Nstep_val-i)/(Nstep_val-1)*start+(i-1)/(Nstep_val-1)*ending;
end

thetaz_val = zeros(Nstep_val,1);
vz_val = ones(Nstep_val,1)*0.1;
phiz_val = zeros(Nstep_val,1);
tfz_val = 2;%18是原始初始值 16

xzpath = xz_val;
yzpath = yz_val;
%% admm best
% xz_val = [0;0;0.113525917676123;0.301304844126044;0.524692539660771;0.756356946991604;0.982070969676942;1.19705809050504;1.40150465764529;1.59743538341282;1.78713973289788;1.97262623558387;2.15560678528801;2.33769882440600;2.52060783353327;2.70598480000198;2.89468914643526;3.08580553806346;3.27676753970982;3.46526467312404;3.65106076244095;3.83639508543700;4.02483619997714;4.21829278678330;4.41448157905812;4.61091138763438;4.80743707673672;5.00595434224330;5.20929476316019;5.41995214499994;5.63811512986213;5.85899446095211;6.07434000792116;6.29281689086561;6.50316229726176;6.74115525594013;7.02438081459427;7.32777964578526;7.56507440437755;7.78164507509426;7.96487070695374;8.11464966737212;8.24464643073305;8.36715126975275;8.48918236683282;8.61241316027278;8.73275067765302;8.84087774007188;8.92808010129095;9];
% yz_val = [0;0;3.03877567245372e-38;-0.00213241458510409;-0.00862752594354691;-0.0199726600301705;-0.0354887325906082;-0.0543633114588775;-0.0761358627735749;-0.100712887539435;-0.128207795569511;-0.158759732371050;-0.192366813715059;-0.228724030029007;-0.267036738595451;-0.305767857319390;-0.342355575114069;-0.373224609428948;-0.394545401347596;-0.403378729346216;-0.398071078107742;-0.377768190588232;-0.341944933892759;-0.291036904008926;-0.227832655163594;-0.156168484268218;-0.0787194848043874;0.00393325744932024;0.0933428946535166;0.193081992710703;0.308495341821696;0.445628057934637;0.610108675719307;0.817511876355283;1.03735829176769;1.22692882735511;1.33810849806571;1.36106030896617;1.30723473649568;1.18276939814802;1.00323181828918;0.809009946638846;0.625184521557349;0.460152011580844;0.316044368586249;0.195495510571533;0.103190856319079;0.0428965720934094;0.0119240917359204;0];
% xzpath = xz_val;
% yzpath = yz_val;
% thetaz_val = [0;0;-0.0113554964247720;-0.0290673216360512;-0.0489331858415675;-0.0686341996316964;-0.0875694697299116;-0.106095192786249;-0.124785561435429;-0.143933317908366;-0.163246679599472;-0.181640418564389;-0.197072416724537;-0.206478023304001;-0.205968765703488;-0.191512858739622;-0.160136534250230;-0.111188908991433;-0.0468276108329398;0.0285593100778884;0.109112285425812;0.187861537696436;0.257315988616319;0.311661387517674;0.349827905145156;0.375402029440909;0.394521605011009;0.414259026249776;0.442195947850552;0.486595928685461;0.555608770240244;0.652273853410065;0.759402142193859;0.807480091080714;0.672626656523279;0.374065912842000;0.0755051623202803;-0.223055588099367;-0.521616338200628;-0.775231959040237;-0.913880674626400;-0.955271073728999;-0.932236744215162;-0.868159952762338;-0.774397133505353;-0.654322859765287;-0.508677996466053;-0.341281491792859;-0.164302237637189;0];
% vz_val = [0;0.298491500438036;0.493755334666990;0.587597164539980;0.609840720116900;0.594866069897933;0.567435755854645;0.540587028530670;0.519193924065667;0.503997580260284;0.494267447044825;0.489154455261887;0.488221086173360;0.491355995255786;0.497932720304434;0.505396657317079;0.509011165740138;0.505212446813467;0.496155760498392;0.488709355947054;0.490211160470111;0.504337973532383;0.525968381551970;0.541943280088443;0.549767580213638;0.555399018912480;0.565390603827983;0.584040179656717;0.612822211651259;0.648933576229188;0.683577885178029;0.712469947534105;0.792056283885182;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.639763986087875;0.656765026943858;0.674477755813932;0.644875626326552;0.591973333214793;0.540399790945255;0.496499826089703;0.453258212904364;0.398761141250840;0.325509431253191;0.243312137509665;0.191678993022397;0.232615150179571];
% phiz_val = [0;-0.0298567872027064;-0.0465693595879300;-0.0522329326693283;-0.0517994946593642;-0.0497861395750887;-0.0487093254560526;-0.0491422249300610;-0.0503448258919340;-0.0507802484902593;-0.0483623022362571;-0.0405750544005156;-0.0247299795315619;0.00133898116305791;0.0380086366898732;0.0824971633507105;0.128697044740519;0.169223916888034;0.198213373621572;0.211796380672631;0.207053886458637;0.182615244972643;0.142889306618454;0.100350486887237;0.0672415505612149;0.0502707303889696;0.0518952200601718;0.0734540078330049;0.116740011180817;0.181454130006969;0.254159634257429;0.281670338482771;0.126410421469818;-0.354567528228307;-0.784999990992403;-0.785000000000000;-0.785000000000000;-0.785000000000000;-0.666826648474171;-0.364546387259292;-0.108826976119441;0.0605637172453315;0.168475868907380;0.246528767863794;0.315708966431026;0.382941223177671;0.440132393296418;0.465328131238004;0.431996696803164;0.330911047905449];
%% ipot 2ge shengchengde
% xz_val = [0;0;0.0101812962954255;0.0314029130737585;0.0644109252062240;0.109699608093290;0.167384065813971;0.237127744512512;0.318154969375371;0.409356646244324;0.509472570255666;0.617314021451106;0.731981191920520;0.853032819302931;0.980577192231707;1.11526922216697;1.25821287045772;1.41077960438403;1.57436203513981;1.75008910035727;1.93853625052587;2.13947040453684;2.35167237034977;2.57287597698232;2.79985225964078;3.02865107205407;3.25499636173901;3.47481916330188;3.68490483300018;3.88362652041729;4.07173519529280;4.25317895173672;4.43078439516864;4.61142887386479;4.80388308182728;5.01967072399819;5.26761978119339;5.55161944227173;5.86814550270278;6.20383837367203;6.54114028927206;6.86328770484398;7.15956257992185;7.42922284279597;7.67398567015767;7.90633080288385;8.13982452157523;8.39026912833668;8.67468969058970;9];
% yz_val = [0;0;0;-0.000483368573672217;-0.00260047869993374;-0.00804410040989606;-0.0188613792904966;-0.0372133565239633;-0.0651108683144345;-0.104165878718906;-0.155395303469538;-0.219100630747997;-0.294826448746525;-0.381381967762112;-0.476898291543107;-0.578893537451174;-0.684326905932899;-0.789637547698508;-0.890779475322857;-0.983274953713048;-1.06231210344440;-1.12290612276605;-1.16012852081864;-1.16938902058417;-1.14673642858945;-1.08913356092961;-0.994660004115566;-0.862604321024221;-0.693423284708444;-0.488573235464996;-0.250266591506152;0.0187154337542512;0.306582467401668;0.600354876607241;0.886529877017273;1.15554743370954;1.39524727913887;1.59089731952863;1.72654738548442;1.78834826174996;1.77028430500666;1.67521756071843;1.51321129479009;1.29822733265514;1.05527482764320;0.800420946668194;0.546618967398422;0.309527718522044;0.114490016740634;0];
% xzpath = xz_val;
% yzpath = yz_val;
% thetaz_val = [0;0;-0.0227732417471635;-0.0640515432072322;-0.119624385064992;-0.185372116680902;-0.257301958827829;-0.331586086779163;-0.404600673881417;-0.472964581234125;-0.533576449241715;-0.583649268970645;-0.620742007617205;-0.642788413040655;-0.648123598503686;-0.635509303764797;-0.604158777066513;-0.553762006108495;-0.484511569986751;-0.397128749707454;-0.292888812754526;-0.173643689808384;-0.0418397131219737;0.0994721947715399;0.246636413815388;0.395404645241562;0.540961211599779;0.677961551621895;0.800582306094148;0.902579680251352;0.977350935488174;1.01799194262823;1.01948347630928;0.978762469265557;0.894756619666686;0.768483483616412;0.603243772914973;0.404881216904184;0.182060887192122;-0.0535031556747981;-0.286958316524924;-0.500391299601784;-0.673055780248299;-0.781686338249461;-0.831565650095424;-0.827049496433274;-0.758015520512915;-0.601089200936443;-0.338402896133099;0];
% vz_val = [0;0.0236177578755528;0.0492409795832033;0.0767266855575444;0.105813260081031;0.136144257011440;0.167293091002889;0.198789083150279;0.230144291943751;0.260879856399451;0.290550360759257;0.318764992645029;0.345204864195632;0.369636575352133;0.391922691289812;0.412030107377863;0.430037193762885;0.446140145460298;0.460658190319337;0.474036378642212;0.486843820682511;0.499764743124707;0.513579918236169;0.529137123237885;0.547311340570157;0.568958086074194;0.594865834317142;0.625715045021479;0.662050933717542;0.704274555284192;0.752652369139365;0.784638679009641;0.799999655756146;0.799999981744365;0.799999979390820;0.799999974482186;0.799999957445211;0.798838617791688;0.791799865580155;0.783567288025412;0.779151975786631;0.783312955748700;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.799947043783608];
% phiz_val = [0;-0.0528275471039558;-0.0957541064624525;-0.128913439445096;-0.152516335947222;-0.166857102136994;-0.172318386288335;-0.169373406836144;-0.158585131444251;-0.140602569795690;-0.116154927446262;-0.0860447721857573;-0.0511414902590787;-0.0123761370684837;0.0292616333195014;0.0727244475896239;0.116906403630637;0.160641630067732;0.202703686441832;0.241807479173669;0.276615311043231;0.305748336762695;0.327804076094009;0.341379800024476;0.345100659822280;0.337650495741850;0.317802445349166;0.284445831415826;0.236605361133561;0.173448385254028;0.0942757620052528;0.00345994069125242;-0.0944613393914730;-0.194870059606025;-0.292918334452357;-0.383309881721672;-0.460145612454414;-0.516880802226984;-0.546442650050051;-0.541550634002633;-0.495104785353406;-0.400533269957932;-0.251992491163457;-0.115706043316548;0.0104762125201436;0.160139502983161;0.364025141054371;0.609358706794178;0.785000000000000;0.784949563009833];
%% 2ge zhangaiwu admm
% xz_val = [0;0;0.0973237657321297;0.264233048926422;0.473252675453797;0.701334834687590;0.932331352225812;1.15712444328451;1.37210384005779;1.57712191688504;1.77375085673191;1.96415095514582;2.15048935925437;2.33469134247718;2.51830071952555;2.70231488012017;2.88701147489240;3.07193738994041;3.25625717376773;3.43944670747646;3.62196966074100;3.80541265132584;3.99183671939369;4.18278229280307;4.37885821828268;4.58020712180449;4.78683636568085;4.99806870269335;5.21162361569115;5.42333847407422;5.62941547460634;5.83491474701521;6.04772335012101;6.27729001330074;6.53083201083758;6.80647248054060;7.09397282419835;7.36607947565204;7.62012830583333;7.83257455382499;8.00216808741018;8.14008109809591;8.26117623850507;8.37686521675873;8.49261165326729;8.60848449755483;8.72071999468581;8.82426461003389;8.91647846649556;9];
% yz_val = [0;0;5.88679406174871e-40;-0.00156557768378209;-0.00677591019941097;-0.0167696818117315;-0.0315630201603349;-0.0505622368663480;-0.0731065787810353;-0.0987355405695912;-0.127193524481410;-0.158288234305005;-0.191692697486318;-0.226732345119595;-0.262178259789445;-0.296089817405698;-0.325801201105992;-0.348157602338094;-0.359981014186858;-0.358517636445601;-0.341549141534511;-0.307140515631057;-0.253418399186997;-0.178775860347082;-0.0822633912871892;0.0364804278916057;0.177598696641861;0.340799706923975;0.524140937061655;0.722235818410159;0.926189364616391;1.13072500571996;1.32764447626397;1.50474311055322;1.64538018281730;1.73000594270832;1.74323824305838;1.67991182726459;1.54035312084515;1.34457668415361;1.11912256667243;0.889399410244449;0.673999568855571;0.483850909862332;0.324565963349835;0.198900137477741;0.107482548270832;0.0479327841514517;0.0144525379481573;0];
% thetaz_val = [0;0;-0.00937953685148561;-0.0249223185728998;-0.0437885337361463;-0.0639540550465652;-0.0843182938209229;-0.104485554810810;-0.124363169416017;-0.143731360950166;-0.161883367487395;-0.177383561164502;-0.187978183152489;-0.190704677133273;-0.182243009131732;-0.159499432930314;-0.120309969372819;-0.0640584249423477;0.00798815622892700;0.0926999139830174;0.185416752206144;0.280570010611180;0.372645713962891;0.457404166229057;0.532842391639131;0.599193852180027;0.657817527775405;0.709419793007981;0.752175513093470;0.780219438642313;0.783048047591469;0.746637883777450;0.657086818387491;0.506436428976809;0.297880087719595;0.0459928797773789;-0.228656310806622;-0.502334906648752;-0.744585745270848;-0.925869027223778;-1.03012362915035;-1.05864413847087;-1.02421351171793;-0.942399117371776;-0.825920125656846;-0.683529599221572;-0.521918543215423;-0.348272239474144;-0.171342949043465;0];
% vz_val = [0;0.268535585409135;0.460556097384639;0.576905788667882;0.629927771074550;0.638670913129719;0.622460155534201;0.596423508297919;0.570088434955957;0.548190985941392;0.532311376888655;0.522340822587640;0.517363674517470;0.515968757767963;0.516281389014252;0.516166307372199;0.513962489283661;0.509620116283397;0.505472408126131;0.505788687826074;0.514982676695548;0.535312940117636;0.565680912379834;0.602999612197461;0.644976883827512;0.690406430305342;0.736523416923006;0.776603883133705;0.799999908953407;0.799999984522603;0.799999985873048;0.799999985839524;0.799999984295094;0.799988333666132;0.795583612799212;0.794110268609851;0.770860326732181;0.799774705063922;0.797125806858869;0.778424247234913;0.739304186923277;0.681813098145470;0.614133691678893;0.543281426306823;0.471640697769642;0.399407511414331;0.329578856920099;0.270687385565161;0.233877227644080;0.225725094535173];
% phiz_val = [0;-0.0258800037209066;-0.0428856195303220;-0.0520556319949767;-0.0556406755270670;-0.0561889764493381;-0.0556454756479919;-0.0548462837868208;-0.0534406844290652;-0.0500849886474938;-0.0427681106636722;-0.0292326647692918;-0.00752293801762174;0.0233474213953642;0.0627540406354098;0.108131507850277;0.155209175273598;0.198790816467228;0.233736552304632;0.255824158079326;0.262546724915182;0.254055139723665;0.233865391730856;0.208149036058433;0.183076848342887;0.161754355952151;0.142380891228615;0.117971517402500;0.0773787564401866;0.00780469348203085;-0.100462868253040;-0.247089162524662;-0.415674323821892;-0.575448337505041;-0.695006798524419;-0.757811626181940;-0.755133562656148;-0.668418143049352;-0.500196554026797;-0.287659138026052;-0.0786937456533957;0.0950009326246811;0.225742151625177;0.321388655614931;0.392883722545739;0.445916978311805;0.479124615437076;0.488183027284339;0.472769202681217;0.440398575676237];



%% 开始ADMM迭代
admmk= 0;
MAX_ITER = 10;
cfs_vbTend = [];
%% 
ampl_g = AMPL('F:\amplide.mswin64\ampl.mswin64');
ampl_g.eval('option version;');
ampl_g.read('./admm_g.mod');
vehicle_l = ampl_g.getParameter('vehicle_l');
vehicle_l.setValues(vehicle_l_val);
Nstep = ampl_g.getParameter('Nstep');
Nstep.setValues(Nstep_val);
%     margin = ampl_g.getParameter('margin');
%     margin.setValues(margin_val);
sigma = ampl_g.getParameter('sigma');
sigma.setValues(sigma_val);
lambdag = ampl_g.getParameter('lambda');
lambdag.setValues(lambda_val);
xg0 = ampl_g.getParameter('xg0');
xg0.setValues(x_ini_val);
yg0 = ampl_g.getParameter('yg0');
yg0.setValues(y_ini_val);
thetag0 = ampl_g.getParameter('thetag0');
thetag0.setValues(theta_ini_val);
vg0 = ampl_g.getParameter('vg0');
vg0.setValues(v_ini_val);
phig0 = ampl_g.getParameter('phig0');
phig0.setValues(phi_ini_val);
xgend = ampl_g.getParameter('xgend');
xgend.setValues(x_fi_val);
ygend = ampl_g.getParameter('ygend');
ygend.setValues(y_fi_val);
thetagend = ampl_g.getParameter('thetagend');
thetagend.setValues(thetaend_val);

xz = ampl_g.getParameter('xz');
% xz.setValues(xz_val);
yz = ampl_g.getParameter('yz');
% yz.setValues(yz_val);
thetaz = ampl_g.getParameter('thetaz');
% thetaz.setValues(thetaz_val);
vz = ampl_g.getParameter('vz');
% vz.setValues(vz_val);
phiz = ampl_g.getParameter('phiz');
% phiz.setValues(phiz_val);
tfz = ampl_g.getParameter('tfz');
% tfz.setValues(tfz_val);

xg_s = ampl_g.getVariable('xg');
% xg_s_mat = cell2mat(table2array(xg_s.getValues().toTable()));
% xg_s_val = xg_s_mat(:,2);

yg_s = ampl_g.getVariable('yg');
% yg_s_mat = cell2mat(table2array(yg_s.getValues().toTable()));
% yg_s_val = yg_s_mat(:,2);

thetag_s = ampl_g.getVariable('thetag');
% thetag_s_mat = cell2mat(table2array(thetag_s.getValues().toTable()));
% thetag_s_val = thetag_s_mat(:,2);

vg_s = ampl_g.getVariable('vg');
% vg_s_mat = cell2mat(table2array(vg_s.getValues().toTable()));
% vg_s_val = vg_s_mat(:,2);

phig_s = ampl_g.getVariable('phig');
% phig_s_mat = cell2mat(table2array(phig_s.getValues().toTable()));
% phig_s_val = phig_s_mat(:,2);

tfg_s = ampl_g.getVariable('tfg');
% tfg_s_mat = cell2mat(table2array(tfg_s.getValues().toTable()));
% tfg_s_val = tfg_s_mat;
%% 

ampl_z = AMPL('F:\amplide.mswin64\ampl.mswin64');
ampl_z.eval('option version;');
ampl_z.read('./admm_z.mod');
vehicle_l = ampl_z.getParameter('vehicle_l');
vehicle_l.setValues(vehicle_l_val);
Nstep = ampl_z.getParameter('Nstep');
Nstep.setValues(Nstep_val);
ob_num = ampl_z.getParameter('ob_num');
ob_num.setValues(nobj);
margin = ampl_z.getParameter('margin');
margin.setValues(margin_val);

sigma = ampl_z.getParameter('sigma');
sigma.setValues(sigma_val);
lambdaz = ampl_z.getParameter('lambda');
lambdaz.setValues(lambda_val);
xz0 = ampl_z.getParameter('xz0');
xz0.setValues(x_ini_val);
yz0 = ampl_z.getParameter('yz0');
yz0.setValues(y_ini_val);
xzend = ampl_z.getParameter('xzend');
xzend.setValues(x_fi_val);
yzend = ampl_z.getParameter('yzend');
yzend.setValues(y_fi_val);
thetazend = ampl_z.getParameter('thetazend');
thetazend.setValues(thetaend_val);

xg = ampl_z.getParameter('xg');
% xg.setValues(xg_s_val);
yg = ampl_z.getParameter('yg');
% yg.setValues(yg_s_val);
thetag = ampl_z.getParameter('thetag');
% thetag.setValues(thetag_s_val);
vg = ampl_z.getParameter('vg');
% vg.setValues(vg_s_val);
phig = ampl_z.getParameter('phig');
% phig.setValues(phig_s_val);
tfg = ampl_z.getParameter('tfg');
% tfg.setValues(tfg_s_val);
Lstack = ampl_z.getParameter('Lstack');
Sstack = ampl_z.getParameter('Sstack');
Lstack_val = zeros(Nstep_val,nobj,2);
Sstack_val = zeros(Nstep_val,nobj);
hang = cell(1,Nstep_val);
for i =1:Nstep_val
    hang{i} = i;
end
lie = cell(1,nobj);
for i =1:nobj
    lie{i} = i;
end
page = cell(1,2);
for i =1:2
    page{i} = i;
end
dfL = DataFrame(3,'hang','lie','page','Lstack');
dfS = DataFrame(2,'hang','lie','Sstack');


xz_it = ampl_z.getVariable('xz');
% xz_it_mat = cell2mat(table2array(xz_it.getValues().toTable()));
% xz_it_val = xz_it_mat(:,2);

yz_it = ampl_z.getVariable('yz');
% yz_it_mat = cell2mat(table2array(yz_it.getValues().toTable()));
% yz_it_val = yz_it_mat(:,2);
%% 
xz_s = ampl_z.getVariable('xz');
% xz_s_mat = cell2mat(table2array(xz_s.getValues().toTable()));
% xz_s_val = xz_s_mat(:,2);

yz_s = ampl_z.getVariable('yz');
% yz_s_mat = cell2mat(table2array(yz_s.getValues().toTable()));
% yz_s_val = yz_s_mat(:,2);

thetaz_s = ampl_z.getVariable('thetaz');
% thetaz_s_mat = cell2mat(table2array(thetaz_s.getValues().toTable()));
% thetaz_s_val = thetaz_s_mat(:,2);

vz_s = ampl_z.getVariable('vz');
% vz_s_mat = cell2mat(table2array(vz_s.getValues().toTable()));
% vz_s_val = vz_s_mat(:,2);

phiz_s = ampl_z.getVariable('phiz');
% phiz_s_mat = cell2mat(table2array(phiz_s.getValues().toTable()));
% phiz_s_val = phiz_s_mat(:,2);

tfz_s = ampl_z.getVariable('tfz');
% tfz_s_mat = cell2mat(table2array(tfz_s.getValues().toTable()));
% tfz_s_val = tfz_s_mat;

%% 
g_solve_tend = 0;
z_solve_tend = 0;
admmT0 =tic;
while 1
    %% g 循环
    admmk = admmk+1;
    if admmk >= 30
        disp('OUT');
        break;
    end
    
    
%     ampl_g = AMPL('F:\amplide.mswin64\ampl.mswin64');
%     ampl_g.eval('option version;');
%     ampl_g.read('./admm_g.mod');
%     vehicle_l = ampl_g.getParameter('vehicle_l');
%     vehicle_l.setValues(vehicle_l_val);
%     Nstep = ampl_g.getParameter('Nstep');
%     Nstep.setValues(Nstep_val);
% %     margin = ampl_g.getParameter('margin');
% %     margin.setValues(margin_val);
%     sigma = ampl_g.getParameter('sigma');
%     sigma.setValues(sigma_val);
%     lambda = ampl_g.getParameter('lambda');
    lambdag.setValues(lambda_val);
%     xg0 = ampl_g.getParameter('xg0');
%     xg0.setValues(x_ini_val);
%     yg0 = ampl_g.getParameter('yg0');
%     yg0.setValues(y_ini_val);
%     thetag0 = ampl_g.getParameter('thetag0');
%     thetag0.setValues(theta_ini_val);
%     vg0 = ampl_g.getParameter('vg0');
%     vg0.setValues(v_ini_val);
%     phig0 = ampl_g.getParameter('phig0');
%     phig0.setValues(phi_ini_val);
%     xgend = ampl_g.getParameter('xgend');
%     xgend.setValues(x_fi_val);
%     ygend = ampl_g.getParameter('ygend');
%     ygend.setValues(y_fi_val);
%     thetagend = ampl_g.getParameter('thetagend');
%     thetagend.setValues(thetaend_val);
    
%     xz = ampl_g.getParameter('xz');
    xz.setValues(xz_val);
%     yz = ampl_g.getParameter('yz');
    yz.setValues(yz_val);
%     thetaz = ampl_g.getParameter('thetaz');
    thetaz.setValues(thetaz_val);
%     vz = ampl_g.getParameter('vz');
    vz.setValues(vz_val);
%     phiz = ampl_g.getParameter('phiz');
    phiz.setValues(phiz_val);
%     tfz = ampl_g.getParameter('tfz');
    tfz.setValues(tfz_val);
    ampl_g.setOption('solver','IPOPT');
    g_solve_tini = tic;
    ampl_g.solve();
    g_solve_tend = g_solve_tend + toc(g_solve_tini);
    solve_result_g = ampl_g.getValue('solve_result');
    if solve_result_g(1) ~= 's'
        disp('g fail!!!!!!');
        break
    end
%     xg_s = ampl_g.getVariable('xg');
    xg_s_mat = cell2mat(table2array(xg_s.getValues().toTable()));
    xg_s_val = xg_s_mat(:,2);
    
%     yg_s = ampl_g.getVariable('yg');
    yg_s_mat = cell2mat(table2array(yg_s.getValues().toTable()));
    yg_s_val = yg_s_mat(:,2);
    
%     thetag_s = ampl_g.getVariable('thetag');
    thetag_s_mat = cell2mat(table2array(thetag_s.getValues().toTable()));
    thetag_s_val = thetag_s_mat(:,2);
    
%     vg_s = ampl_g.getVariable('vg');
    vg_s_mat = cell2mat(table2array(vg_s.getValues().toTable()));
    vg_s_val = vg_s_mat(:,2);
    
%     phig_s = ampl_g.getVariable('phig');
    phig_s_mat = cell2mat(table2array(phig_s.getValues().toTable()));
    phig_s_val = phig_s_mat(:,2);
    
%     tfg_s = ampl_g.getVariable('tfg');
    tfg_s_mat = cell2mat(table2array(tfg_s.getValues().toTable()));
    tfg_s_val = tfg_s_mat;
    
    
    
    
    %%%%% z 循环
%     ampl_z = AMPL('F:\amplide.mswin64\ampl.mswin64');
%     ampl_z.eval('option version;');
%     ampl_z.read('./admm_z.mod');
%     vehicle_l = ampl_z.getParameter('vehicle_l');
%     vehicle_l.setValues(vehicle_l_val);
%     Nstep = ampl_z.getParameter('Nstep');
%     Nstep.setValues(Nstep_val);
%     ob_num = ampl_z.getParameter('ob_num');
%     ob_num.setValues(nobj);
%     margin = ampl_z.getParameter('margin');
%     margin.setValues(margin_val);
%     
%     sigma = ampl_z.getParameter('sigma');
%     sigma.setValues(sigma_val);
%     lambdaz = ampl_z.getParameter('lambda');
    lambdaz.setValues(lambda_val);
%     xz0 = ampl_z.getParameter('xz0');
%     xz0.setValues(x_ini_val);
%     yz0 = ampl_z.getParameter('yz0');
%     yz0.setValues(y_ini_val);
%     xzend = ampl_z.getParameter('xzend');
%     xzend.setValues(x_fi_val);
%     yzend = ampl_z.getParameter('yzend');
%     yzend.setValues(y_fi_val);
%     thetazend = ampl_z.getParameter('thetazend');
%     thetazend.setValues(thetaend_val);
    
%     xg = ampl_z.getParameter('xg');
    xg.setValues(xg_s_val);
%     yg = ampl_z.getParameter('yg');
    yg.setValues(yg_s_val);
%     thetag = ampl_z.getParameter('thetag');
    thetag.setValues(thetag_s_val);
%     vg = ampl_z.getParameter('vg');
    vg.setValues(vg_s_val);
%     phig = ampl_z.getParameter('phig');
    phig.setValues(phig_s_val);
%     tfg = ampl_z.getParameter('tfg');
    tfg.setValues(tfg_s_val);
    
    
    
    
    for k=1:MAX_ITER
        k
        cfs_vbT0 = tic;
        if admmk<=6   %5keyi-g  6keyi-z  6keyi-g 4.0s
            for i=1:Nstep_val
                for j=1:nobj
                    poly = obs{j}.poly;
%                     [L,S,d] = d2poly([xzpath(i) yzpath(i)],poly.'); %自身迭代可以 xzpath yzpath
                    [L,S,d] = d2poly([xg_s_val(i) yg_s_val(i)],poly.');%xg_s_val
%                     Lstack = ampl_z.getParameter('Lstack');
%                     Sstack = ampl_z.getParameter('Sstack');
%                     Lstack.setValues([i j 1],L(1));
%                     Lstack.setValues([i j 2],L(2));
%                     Lstack.setValues([i j],L);
                  
%                     Sstack.setValues([i j],S);
                    Lstack_val(i,j,:) = L;
                    Sstack_val(i,j) = S;
                end
            end
            dfL = DataFrame(3,'hang','lie','page','Lstack');
            dfS = DataFrame(2,'hang','lie','Sstack');
            dfL.setMatrix(Lstack_val,hang,lie,page);
            dfS.setMatrix(Sstack_val,hang,lie);
            ampl_z.setData(dfL);
            ampl_z.setData(dfS);
            
        end
        cfs_vbTend = [cfs_vbTend toc(cfs_vbT0)];
        
        ampl_z.setOption('solver','IPOPT');
        z_solve_tini = tic;
        ampl_z.solve();
        z_solve_tend = z_solve_tend + toc(z_solve_tini);
        solve_result_z_it = ampl_z.getValue('solve_result');
        
%         xz_it = ampl_z.getVariable('xz');
        xz_it_mat = cell2mat(table2array(xz_it.getValues().toTable()));
        xz_it_val = xz_it_mat(:,2);
        
%         yz_it = ampl_z.getVariable('yz');
        yz_it_mat = cell2mat(table2array(yz_it.getValues().toTable()));
        yz_it_val = yz_it_mat(:,2);
        
        diff = norm(xz_it_val - xzpath)+norm(yz_it_val - yzpath);
        if  diff < inf*0.001*Nstep_val*2 && solve_result_z_it(1) =='s'
            disp('cfs done--next');
            xzpath = xz_it_val;
            yzpath = yz_it_val;
%             pause(0.1);
            break;
        end
        xg_s_val = xz_it_val;
        yg_s_val = yz_it_val;
        if k==MAX_ITER 
            if solve_result_z_it(1) ==s
                disp('cfs out and slove');
            end
            if solve_result_z_it(1) ~=s
                disp('cfs out and fail!!!');
                
            end
        end
        
    end
    if solve_result_z_it(1) ~='s'
        disp('cfs out and fail!!!');
        break;
    end
    
    
%     xz_s = ampl_z.getVariable('xz');
    xz_s_mat = cell2mat(table2array(xz_s.getValues().toTable()));
    xz_s_val = xz_s_mat(:,2);
    
%     yz_s = ampl_z.getVariable('yz');
    yz_s_mat = cell2mat(table2array(yz_s.getValues().toTable()));
    yz_s_val = yz_s_mat(:,2);
    
%     thetaz_s = ampl_z.getVariable('thetaz');
    thetaz_s_mat = cell2mat(table2array(thetaz_s.getValues().toTable()));
    thetaz_s_val = thetaz_s_mat(:,2);
    
%     vz_s = ampl_z.getVariable('vz');
    vz_s_mat = cell2mat(table2array(vz_s.getValues().toTable()));
    vz_s_val = vz_s_mat(:,2);
    
%     phiz_s = ampl_z.getVariable('phiz');
    phiz_s_mat = cell2mat(table2array(phiz_s.getValues().toTable()));
    phiz_s_val = phiz_s_mat(:,2);
    
%     tfz_s = ampl_z.getVariable('tfz');
    tfz_s_mat = cell2mat(table2array(tfz_s.getValues().toTable()));
    tfz_s_val = tfz_s_mat;
    %% 
%     diff_admm = norm([xg_s_val;yg_s_val;thetag_s_val;vg_s_val;phig_s_val;tfg_s_val;] - ...
%         [xz_s_val;yz_s_val;thetaz_s_val;vz_s_val;phiz_s_val;tfz_s_val;]);
     
%     if diff_admm < 0.001*(5*Nstep_val+1)
%         disp('ADMM done!!!');
%         break;
%     end
     diff_admm = norm([xg_s_val;yg_s_val;] - ...
        [xz_s_val;yz_s_val;]);
    if diff_admm < 0.002*(2*Nstep_val)
        disp('ADMM done!!!');
        break;
    end
    %% 迭代更新 下一次开始迭代
    lambda_val = lambda_val + sigma_val*...
        ([xg_s_val;yg_s_val;thetag_s_val;vg_s_val;phig_s_val;tfg_s_val;] - ...
        [xz_s_val;yz_s_val;thetaz_s_val;vz_s_val;phiz_s_val;tfz_s_val;]);
    
    xz_val = xz_s_val;
    yz_val = yz_s_val;
    thetaz_val = thetaz_s_val;
    vz_val = vz_s_val;
    phiz_val = phiz_s_val;
    tfz_val = tfz_s_val;
    
    
    
    
    
end
admmmTend = toc(admmT0)
cfsT_sum = sum(cfs_vbTend);
pureT = admmmTend - cfsT_sum
tfg_s_val
g_solve_tend
z_solve_tend
all_gz = z_solve_tend + g_solve_tend
%% 
figure(1)
hold on;
for i=1:nobj
    ob = Polyhedron('V',obs{i}.poly');
    h = ob.plot('color', [149, 165, 166]/255, 'EdgeColor','k');
    alpha(h,0.5);
end
axis equal
grid on
box on
% legend('Iter1','Iter2','Iter3','Iter4','Iter5')
axis([-0.5 9.5 -3 3])

plot(xg_s_val,yg_s_val,'r','LineWidth',2);
plot(xz_s_val,yz_s_val,'k','LineWidth',2);
%% 

figure 
hold on;
plot(thetag_s_val,'g','LineWidth',2);%theta

figure 
hold on;
plot(vg_s_val,'b','LineWidth',2);%v

figure 
hold on;
plot(phig_s_val,'r','LineWidth',2);%phi


%% 

%% 这一部分第vs对比图代码

clc;
clear;

Nstep_val = 50;

a1x_val = 2.4071;
a1y_val = -3.7606;
b1x_val = 1.6896;
b1y_val = -0.1733;
c1x_val = -0.4628;
c1y_val = -0.8907;

a2x_val = 2.75;
a2y_val = -3.25;
b2x_val = 7.25;
b2y_val = -3.25;
c2x_val = 7.25;
c2y_val = -1.85;
d2x_val = 2.75;
d2y_val = -1.85;

a3x_val = 5.75;
a3y_val = -3.25;

b3x_val = 7.7832;
b3y_val = -3.25;

c3x_val = 7.1847;
c3y_val = 1.5382;

d3x_val = 5.75;
d3y_val = 0.1036;


a4x_val = 2.8198;
a4y_val = -0.25;

b4x_val = 4.2262;
b4y_val = -0.25;

c4x_val = 4.5762;
c4y_val = 3.25;

d4x_val = 1.6531;
d4y_val = 3.25;


a5x_val = 0.75;
a5y_val = 0.75;

b5x_val = 6.167;
b5y_val = 0.75;

c5x_val = 6.2949;
c5y_val = 1.0587;

d5x_val = 5.1036;
d5y_val = 2.25;

e5x_val = 0.75;
e5y_val = 2.25;

x_ini_val = 0;
y_ini_val = 0;
theta_ini_val = 0;
v_ini_val = 0;
phi_ini_val = 0;

x_fi_val = 9;
y_fi_val = 0;

s1_val = 4.1181;
s2_val = 6.3;
s3_val = 7.2733;
s4_val = 7.5767;
s5_val = 7.5880;

err_val = 0.0003;
thetagend_val = 0;
%% 
nobj = 5;
obs = {};
obs{1}.v = [0;0]; % velocity of the obstacle
obs{1}.poly = [2 4.3 4 3;3 3 -0 -0]; % shape of the obstacle
obs{2}.v = [0;0];
obs{2}.poly = [6 7 7.5 6;0 1 -3 -3];
obs{3}.v = [0;0];
obs{3}.poly = [1 2 1.5 0;-2 -3 -0.5 -1];
obs{5}.v = [0;0];
obs{5}.poly = [1 6 1 5; 1 1 2 2];
obs{4}.v = [0;0];
obs{4}.poly = [3 7 7 3;-3 -3 -2.1 -2.1];
%% admm best
% xg00_val = [0;0;0.113525917676123;0.301304844126044;0.524692539660771;0.756356946991604;0.982070969676942;1.19705809050504;1.40150465764529;1.59743538341282;1.78713973289788;1.97262623558387;2.15560678528801;2.33769882440600;2.52060783353327;2.70598480000198;2.89468914643526;3.08580553806346;3.27676753970982;3.46526467312404;3.65106076244095;3.83639508543700;4.02483619997714;4.21829278678330;4.41448157905812;4.61091138763438;4.80743707673672;5.00595434224330;5.20929476316019;5.41995214499994;5.63811512986213;5.85899446095211;6.07434000792116;6.29281689086561;6.50316229726176;6.74115525594013;7.02438081459427;7.32777964578526;7.56507440437755;7.78164507509426;7.96487070695374;8.11464966737212;8.24464643073305;8.36715126975275;8.48918236683282;8.61241316027278;8.73275067765302;8.84087774007188;8.92808010129095;9];
% yg00_val = [0;0;3.03877567245372e-38;-0.00213241458510409;-0.00862752594354691;-0.0199726600301705;-0.0354887325906082;-0.0543633114588775;-0.0761358627735749;-0.100712887539435;-0.128207795569511;-0.158759732371050;-0.192366813715059;-0.228724030029007;-0.267036738595451;-0.305767857319390;-0.342355575114069;-0.373224609428948;-0.394545401347596;-0.403378729346216;-0.398071078107742;-0.377768190588232;-0.341944933892759;-0.291036904008926;-0.227832655163594;-0.156168484268218;-0.0787194848043874;0.00393325744932024;0.0933428946535166;0.193081992710703;0.308495341821696;0.445628057934637;0.610108675719307;0.817511876355283;1.03735829176769;1.22692882735511;1.33810849806571;1.36106030896617;1.30723473649568;1.18276939814802;1.00323181828918;0.809009946638846;0.625184521557349;0.460152011580844;0.316044368586249;0.195495510571533;0.103190856319079;0.0428965720934094;0.0119240917359204;0];
% thetag00_val = [0;0;-0.0113554964247720;-0.0290673216360512;-0.0489331858415675;-0.0686341996316964;-0.0875694697299116;-0.106095192786249;-0.124785561435429;-0.143933317908366;-0.163246679599472;-0.181640418564389;-0.197072416724537;-0.206478023304001;-0.205968765703488;-0.191512858739622;-0.160136534250230;-0.111188908991433;-0.0468276108329398;0.0285593100778884;0.109112285425812;0.187861537696436;0.257315988616319;0.311661387517674;0.349827905145156;0.375402029440909;0.394521605011009;0.414259026249776;0.442195947850552;0.486595928685461;0.555608770240244;0.652273853410065;0.759402142193859;0.807480091080714;0.672626656523279;0.374065912842000;0.0755051623202803;-0.223055588099367;-0.521616338200628;-0.775231959040237;-0.913880674626400;-0.955271073728999;-0.932236744215162;-0.868159952762338;-0.774397133505353;-0.654322859765287;-0.508677996466053;-0.341281491792859;-0.164302237637189;0];
% vg00_val = [0;0.298491500438036;0.493755334666990;0.587597164539980;0.609840720116900;0.594866069897933;0.567435755854645;0.540587028530670;0.519193924065667;0.503997580260284;0.494267447044825;0.489154455261887;0.488221086173360;0.491355995255786;0.497932720304434;0.505396657317079;0.509011165740138;0.505212446813467;0.496155760498392;0.488709355947054;0.490211160470111;0.504337973532383;0.525968381551970;0.541943280088443;0.549767580213638;0.555399018912480;0.565390603827983;0.584040179656717;0.612822211651259;0.648933576229188;0.683577885178029;0.712469947534105;0.792056283885182;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.639763986087875;0.656765026943858;0.674477755813932;0.644875626326552;0.591973333214793;0.540399790945255;0.496499826089703;0.453258212904364;0.398761141250840;0.325509431253191;0.243312137509665;0.191678993022397;0.232615150179571];
% phig00_val = [0;-0.0298567872027064;-0.0465693595879300;-0.0522329326693283;-0.0517994946593642;-0.0497861395750887;-0.0487093254560526;-0.0491422249300610;-0.0503448258919340;-0.0507802484902593;-0.0483623022362571;-0.0405750544005156;-0.0247299795315619;0.00133898116305791;0.0380086366898732;0.0824971633507105;0.128697044740519;0.169223916888034;0.198213373621572;0.211796380672631;0.207053886458637;0.182615244972643;0.142889306618454;0.100350486887237;0.0672415505612149;0.0502707303889696;0.0518952200601718;0.0734540078330049;0.116740011180817;0.181454130006969;0.254159634257429;0.281670338482771;0.126410421469818;-0.354567528228307;-0.784999990992403;-0.785000000000000;-0.785000000000000;-0.785000000000000;-0.666826648474171;-0.364546387259292;-0.108826976119441;0.0605637172453315;0.168475868907380;0.246528767863794;0.315708966431026;0.382941223177671;0.440132393296418;0.465328131238004;0.431996696803164;0.330911047905449];
% tfg00_val = 18.6363;
%% ipopt 2ge zhangaiwu 

% xg00_val = [0;0;0.0101812962954255;0.0314029130737585;0.0644109252062240;0.109699608093290;0.167384065813971;0.237127744512512;0.318154969375371;0.409356646244324;0.509472570255666;0.617314021451106;0.731981191920520;0.853032819302931;0.980577192231707;1.11526922216697;1.25821287045772;1.41077960438403;1.57436203513981;1.75008910035727;1.93853625052587;2.13947040453684;2.35167237034977;2.57287597698232;2.79985225964078;3.02865107205407;3.25499636173901;3.47481916330188;3.68490483300018;3.88362652041729;4.07173519529280;4.25317895173672;4.43078439516864;4.61142887386479;4.80388308182728;5.01967072399819;5.26761978119339;5.55161944227173;5.86814550270278;6.20383837367203;6.54114028927206;6.86328770484398;7.15956257992185;7.42922284279597;7.67398567015767;7.90633080288385;8.13982452157523;8.39026912833668;8.67468969058970;9];
% yg00_val = [0;0;0;-0.000483368573672217;-0.00260047869993374;-0.00804410040989606;-0.0188613792904966;-0.0372133565239633;-0.0651108683144345;-0.104165878718906;-0.155395303469538;-0.219100630747997;-0.294826448746525;-0.381381967762112;-0.476898291543107;-0.578893537451174;-0.684326905932899;-0.789637547698508;-0.890779475322857;-0.983274953713048;-1.06231210344440;-1.12290612276605;-1.16012852081864;-1.16938902058417;-1.14673642858945;-1.08913356092961;-0.994660004115566;-0.862604321024221;-0.693423284708444;-0.488573235464996;-0.250266591506152;0.0187154337542512;0.306582467401668;0.600354876607241;0.886529877017273;1.15554743370954;1.39524727913887;1.59089731952863;1.72654738548442;1.78834826174996;1.77028430500666;1.67521756071843;1.51321129479009;1.29822733265514;1.05527482764320;0.800420946668194;0.546618967398422;0.309527718522044;0.114490016740634;0];
% thetag00_val = [0;0;-0.0227732417471635;-0.0640515432072322;-0.119624385064992;-0.185372116680902;-0.257301958827829;-0.331586086779163;-0.404600673881417;-0.472964581234125;-0.533576449241715;-0.583649268970645;-0.620742007617205;-0.642788413040655;-0.648123598503686;-0.635509303764797;-0.604158777066513;-0.553762006108495;-0.484511569986751;-0.397128749707454;-0.292888812754526;-0.173643689808384;-0.0418397131219737;0.0994721947715399;0.246636413815388;0.395404645241562;0.540961211599779;0.677961551621895;0.800582306094148;0.902579680251352;0.977350935488174;1.01799194262823;1.01948347630928;0.978762469265557;0.894756619666686;0.768483483616412;0.603243772914973;0.404881216904184;0.182060887192122;-0.0535031556747981;-0.286958316524924;-0.500391299601784;-0.673055780248299;-0.781686338249461;-0.831565650095424;-0.827049496433274;-0.758015520512915;-0.601089200936443;-0.338402896133099;0];
% vg00_val = [0;0.0236177578755528;0.0492409795832033;0.0767266855575444;0.105813260081031;0.136144257011440;0.167293091002889;0.198789083150279;0.230144291943751;0.260879856399451;0.290550360759257;0.318764992645029;0.345204864195632;0.369636575352133;0.391922691289812;0.412030107377863;0.430037193762885;0.446140145460298;0.460658190319337;0.474036378642212;0.486843820682511;0.499764743124707;0.513579918236169;0.529137123237885;0.547311340570157;0.568958086074194;0.594865834317142;0.625715045021479;0.662050933717542;0.704274555284192;0.752652369139365;0.784638679009641;0.799999655756146;0.799999981744365;0.799999979390820;0.799999974482186;0.799999957445211;0.798838617791688;0.791799865580155;0.783567288025412;0.779151975786631;0.783312955748700;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.799947043783608];
% phig00_val = [0;-0.0528275471039558;-0.0957541064624525;-0.128913439445096;-0.152516335947222;-0.166857102136994;-0.172318386288335;-0.169373406836144;-0.158585131444251;-0.140602569795690;-0.116154927446262;-0.0860447721857573;-0.0511414902590787;-0.0123761370684837;0.0292616333195014;0.0727244475896239;0.116906403630637;0.160641630067732;0.202703686441832;0.241807479173669;0.276615311043231;0.305748336762695;0.327804076094009;0.341379800024476;0.345100659822280;0.337650495741850;0.317802445349166;0.284445831415826;0.236605361133561;0.173448385254028;0.0942757620052528;0.00345994069125242;-0.0944613393914730;-0.194870059606025;-0.292918334452357;-0.383309881721672;-0.460145612454414;-0.516880802226984;-0.546442650050051;-0.541550634002633;-0.495104785353406;-0.400533269957932;-0.251992491163457;-0.115706043316548;0.0104762125201436;0.160139502983161;0.364025141054371;0.609358706794178;0.785000000000000;0.784949563009833];
%% admm 2ge 
xg00_val = [0;0;0.0973237657321297;0.264233048926422;0.473252675453797;0.701334834687590;0.932331352225812;1.15712444328451;1.37210384005779;1.57712191688504;1.77375085673191;1.96415095514582;2.15048935925437;2.33469134247718;2.51830071952555;2.70231488012017;2.88701147489240;3.07193738994041;3.25625717376773;3.43944670747646;3.62196966074100;3.80541265132584;3.99183671939369;4.18278229280307;4.37885821828268;4.58020712180449;4.78683636568085;4.99806870269335;5.21162361569115;5.42333847407422;5.62941547460634;5.83491474701521;6.04772335012101;6.27729001330074;6.53083201083758;6.80647248054060;7.09397282419835;7.36607947565204;7.62012830583333;7.83257455382499;8.00216808741018;8.14008109809591;8.26117623850507;8.37686521675873;8.49261165326729;8.60848449755483;8.72071999468581;8.82426461003389;8.91647846649556;9];
yg00_val = [0;0;5.88679406174871e-40;-0.00156557768378209;-0.00677591019941097;-0.0167696818117315;-0.0315630201603349;-0.0505622368663480;-0.0731065787810353;-0.0987355405695912;-0.127193524481410;-0.158288234305005;-0.191692697486318;-0.226732345119595;-0.262178259789445;-0.296089817405698;-0.325801201105992;-0.348157602338094;-0.359981014186858;-0.358517636445601;-0.341549141534511;-0.307140515631057;-0.253418399186997;-0.178775860347082;-0.0822633912871892;0.0364804278916057;0.177598696641861;0.340799706923975;0.524140937061655;0.722235818410159;0.926189364616391;1.13072500571996;1.32764447626397;1.50474311055322;1.64538018281730;1.73000594270832;1.74323824305838;1.67991182726459;1.54035312084515;1.34457668415361;1.11912256667243;0.889399410244449;0.673999568855571;0.483850909862332;0.324565963349835;0.198900137477741;0.107482548270832;0.0479327841514517;0.0144525379481573;0];
thetag00_val = [0;0;-0.00937953685148561;-0.0249223185728998;-0.0437885337361463;-0.0639540550465652;-0.0843182938209229;-0.104485554810810;-0.124363169416017;-0.143731360950166;-0.161883367487395;-0.177383561164502;-0.187978183152489;-0.190704677133273;-0.182243009131732;-0.159499432930314;-0.120309969372819;-0.0640584249423477;0.00798815622892700;0.0926999139830174;0.185416752206144;0.280570010611180;0.372645713962891;0.457404166229057;0.532842391639131;0.599193852180027;0.657817527775405;0.709419793007981;0.752175513093470;0.780219438642313;0.783048047591469;0.746637883777450;0.657086818387491;0.506436428976809;0.297880087719595;0.0459928797773789;-0.228656310806622;-0.502334906648752;-0.744585745270848;-0.925869027223778;-1.03012362915035;-1.05864413847087;-1.02421351171793;-0.942399117371776;-0.825920125656846;-0.683529599221572;-0.521918543215423;-0.348272239474144;-0.171342949043465;0];
vg00_val = [0;0.268535585409135;0.460556097384639;0.576905788667882;0.629927771074550;0.638670913129719;0.622460155534201;0.596423508297919;0.570088434955957;0.548190985941392;0.532311376888655;0.522340822587640;0.517363674517470;0.515968757767963;0.516281389014252;0.516166307372199;0.513962489283661;0.509620116283397;0.505472408126131;0.505788687826074;0.514982676695548;0.535312940117636;0.565680912379834;0.602999612197461;0.644976883827512;0.690406430305342;0.736523416923006;0.776603883133705;0.799999908953407;0.799999984522603;0.799999985873048;0.799999985839524;0.799999984295094;0.799988333666132;0.795583612799212;0.794110268609851;0.770860326732181;0.799774705063922;0.797125806858869;0.778424247234913;0.739304186923277;0.681813098145470;0.614133691678893;0.543281426306823;0.471640697769642;0.399407511414331;0.329578856920099;0.270687385565161;0.233877227644080;0.225725094535173];
phig00_val = [0;-0.0258800037209066;-0.0428856195303220;-0.0520556319949767;-0.0556406755270670;-0.0561889764493381;-0.0556454756479919;-0.0548462837868208;-0.0534406844290652;-0.0500849886474938;-0.0427681106636722;-0.0292326647692918;-0.00752293801762174;0.0233474213953642;0.0627540406354098;0.108131507850277;0.155209175273598;0.198790816467228;0.233736552304632;0.255824158079326;0.262546724915182;0.254055139723665;0.233865391730856;0.208149036058433;0.183076848342887;0.161754355952151;0.142380891228615;0.117971517402500;0.0773787564401866;0.00780469348203085;-0.100462868253040;-0.247089162524662;-0.415674323821892;-0.575448337505041;-0.695006798524419;-0.757811626181940;-0.755133562656148;-0.668418143049352;-0.500196554026797;-0.287659138026052;-0.0786937456533957;0.0950009326246811;0.225742151625177;0.321388655614931;0.392883722545739;0.445916978311805;0.479124615437076;0.488183027284339;0.472769202681217;0.440398575676237];



%% 
ampl_g = AMPL('F:\amplide.mswin64\ampl.mswin64');
ampl_g.eval('option version;');
ampl_g.read('./admm_vs.mod');
% xg00_s = ampl_g.getVariable('xg');
% xg00_s.setValues(xg00_val);
% yg00_s = ampl_g.getVariable('yg');
% yg00_s.setValues(yg00_val);
for i =1:Nstep_val
    hang{i} = i;
end
dfx = DataFrame(1,'hang','xg');
dfy = DataFrame(1,'hang','yg');
dftheta = DataFrame(1,'hang','thetag');
dfv = DataFrame(1,'hang','vg');
dfphi = DataFrame(1,'hang','phig');

dfx.setMatrix(xg00_val,hang);
dfy.setMatrix(yg00_val,hang);
dftheta.setMatrix(thetag00_val,hang);
dfv.setMatrix(vg00_val,hang);
dfphi.setMatrix(phig00_val,hang);
% 
% ampl_g.setData(dfx);
% ampl_g.setData(dfy);
% ampl_g.setData(dftheta); %...keyi 
% ampl_g.setData(dfv);
% ampl_g.setData(dfphi);
% tfg = ampl_g.getVariable('tfg');
% tfg.setValue(tfg00_val);


Nstep = ampl_g.getParameter('Nstep');
Nstep.setValues(Nstep_val);
xg0 = ampl_g.getParameter('xg0');
xg0.setValues(x_ini_val);
yg0 = ampl_g.getParameter('yg0');
yg0.setValues(y_ini_val);
thetag0 = ampl_g.getParameter('thetag0');
thetag0.setValues(theta_ini_val);
vg0 = ampl_g.getParameter('vg0');
vg0.setValues(v_ini_val);
phig0 = ampl_g.getParameter('phig0');
phig0.setValues(phi_ini_val);
xgend = ampl_g.getParameter('xgend');
xgend.setValues(x_fi_val);
ygend = ampl_g.getParameter('ygend');
ygend.setValues(y_fi_val);

err = ampl_g.getParameter('err');
err.setValues(err_val);
thetagend = ampl_g.getParameter('thetagend');
thetagend.setValues(thetagend_val);

a1x = ampl_g.getParameter('a1x');
a1x.setValues(a1x_val);
a1y = ampl_g.getParameter('a1y');
a1y.setValues(a1y_val);
b1x = ampl_g.getParameter('b1x');
b1x.setValues(b1x_val);
b1y = ampl_g.getParameter('b1y');
b1y.setValues(b1y_val);
c1x = ampl_g.getParameter('c1x');
c1x.setValues(c1x_val);
c1y = ampl_g.getParameter('c1y');
c1y.setValues(c1y_val);

a2x = ampl_g.getParameter('a2x');
a2x.setValues(a2x_val);
a2y = ampl_g.getParameter('a2y');
a2y.setValues(a2y_val);
b2x = ampl_g.getParameter('b2x');
b2x.setValues(b2x_val);
b2y = ampl_g.getParameter('b2y');
b2y.setValues(b2y_val);
c2x = ampl_g.getParameter('c2x');
c2x.setValues(c2x_val);
c2y = ampl_g.getParameter('c2y');
c2y.setValues(c2y_val);
d2x = ampl_g.getParameter('d2x');
d2x.setValues(d2x_val);
d2y = ampl_g.getParameter('d2y');
d2y.setValues(d2y_val);

a3x = ampl_g.getParameter('a3x');
a3x.setValues(a3x_val);
a3y = ampl_g.getParameter('a3y');
a3y.setValues(a3y_val);
b3x = ampl_g.getParameter('b3x');
b3x.setValues(b3x_val);
b3y = ampl_g.getParameter('b3y');
b3y.setValues(b3y_val);
c3x = ampl_g.getParameter('c3x');
c3x.setValues(c3x_val);
c3y = ampl_g.getParameter('c3y');
c3y.setValues(c3y_val);
d3x = ampl_g.getParameter('d3x');
d3x.setValues(d3x_val);
d3y = ampl_g.getParameter('d3y');
d3y.setValues(d3y_val);

a4x = ampl_g.getParameter('a4x');
a4x.setValues(a4x_val);
a4y = ampl_g.getParameter('a4y');
a4y.setValues(a4y_val);
b4x = ampl_g.getParameter('b4x');
b4x.setValues(b4x_val);
b4y = ampl_g.getParameter('b4y');
b4y.setValues(b4y_val);
c4x = ampl_g.getParameter('c4x');
c4x.setValues(c4x_val);
c4y = ampl_g.getParameter('c4y');
c4y.setValues(c4y_val);
d4x = ampl_g.getParameter('d4x');
d4x.setValues(d4x_val);
d4y = ampl_g.getParameter('d4y');
d4y.setValues(d4y_val);

a5x = ampl_g.getParameter('a5x');
a5x.setValues(a5x_val);
a5y = ampl_g.getParameter('a5y');
a5y.setValues(a5y_val);
b5x = ampl_g.getParameter('b5x');
b5x.setValues(b5x_val);
b5y = ampl_g.getParameter('b5y');
b5y.setValues(b5y_val);
c5x = ampl_g.getParameter('c5x');
c5x.setValues(c5x_val);
c5y = ampl_g.getParameter('c5y');
c5y.setValues(c5y_val);
d5x = ampl_g.getParameter('d5x');
d5x.setValues(d5x_val);
d5y = ampl_g.getParameter('d5y');
d5y.setValues(d5y_val);
e5x = ampl_g.getParameter('e5x');
e5x.setValues(e5x_val);
e5y = ampl_g.getParameter('e5y');
e5y.setValues(e5y_val);


s1 = ampl_g.getParameter('s1');
s1.setValues(s1_val);
s2 = ampl_g.getParameter('s2');
s2.setValues(s2_val);
s3 = ampl_g.getParameter('s3');
s3.setValues(s3_val);
s4 = ampl_g.getParameter('s4');
s4.setValues(s4_val);
s5 = ampl_g.getParameter('s5');
s5.setValues(s5_val);

ampl_g.setOption('solver','IPOPT');
tic;
ampl_g.solve();
toc
solve_result_g = ampl_g.getValue('solve_result');
if solve_result_g(1) == 's'
    disp('VS succed');
    xg_s = ampl_g.getVariable('xg');
    xg_s_mat = cell2mat(table2array(xg_s.getValues().toTable()));
    xg_s_val = xg_s_mat(:,2);
    
    yg_s = ampl_g.getVariable('yg');
    yg_s_mat = cell2mat(table2array(yg_s.getValues().toTable()));
    yg_s_val = yg_s_mat(:,2);
    
    thetag_s = ampl_g.getVariable('thetag');
    thetag_s_mat = cell2mat(table2array(thetag_s.getValues().toTable()));
    thetag_s_val = thetag_s_mat(:,2);
    
    vg_s = ampl_g.getVariable('vg');
    vg_s_mat = cell2mat(table2array(vg_s.getValues().toTable()));
    vg_s_val = vg_s_mat(:,2);
    
    phig_s = ampl_g.getVariable('phig');
    phig_s_mat = cell2mat(table2array(phig_s.getValues().toTable()));
    phig_s_val = phig_s_mat(:,2);
    
    tfg_s = ampl_g.getVariable('tfg');
    tfg_s_mat = cell2mat(table2array(tfg_s.getValues().toTable()));
    tfg_s_val = tfg_s_mat;
end

%% 
figure(1)
% hold on;
% for i=1:nobj
%     ob = Polyhedron('V',obs{i}.poly');
%     h = ob.plot('color', [0.8 0.8 0.8], 'EdgeColor','k');
%     alpha(h,0.5);
% end
% axis equal
% grid off
% box on
% % legend('Iter1','Iter2','Iter3','Iter4','Iter5')
% axis([-0.5 9.5 -3 3])

plot(xg_s_val,yg_s_val,'b','LineWidth',2);
% plot(xz_s_val,yz_s_val,'k','LineWidth',2);

figure 
hold on;
plot(thetag_s_val,'g','LineWidth',2);%theta

figure 
hold on;
plot(vg_s_val,'b','LineWidth',2);%v

figure 
hold on;
plot(phig_s_val,'r','LineWidth',2);%phi














